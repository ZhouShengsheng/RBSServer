<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ncu.zss.rbs.dao.RoomBookingMapper" >
  <resultMap id="BaseResultMap" type="ncu.zss.rbs.model.RoomBooking" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="groupId" property="groupid" jdbcType="CHAR" />
    <result column="roomBuilding" property="roombuilding" jdbcType="VARCHAR" />
    <result column="roomNumber" property="roomnumber" jdbcType="VARCHAR" />
    <result column="applicantType" property="applicanttype" jdbcType="VARCHAR" />
    <result column="applicantId" property="applicantid" jdbcType="VARCHAR" />
    <result column="fromTime" property="fromtime" jdbcType="TIMESTAMP" />
    <result column="toTime" property="totime" jdbcType="TIMESTAMP" />
    <result column="bookReason" property="bookreason" jdbcType="VARCHAR" />
    <result column="progress" property="progress" jdbcType="SMALLINT" />
    <result column="adminId" property="adminid" jdbcType="VARCHAR" />
    <result column="facultyId" property="facultyid" jdbcType="VARCHAR" />
    <result column="declineReason" property="declineReason" jdbcType="VARCHAR" />
    <result column="expired" property="expired" jdbcType="BIT" />
    <result column="creationTime" property="creationTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, groupId, roomBuilding, roomNumber, applicantType, applicantId, fromTime, toTime, 
    bookReason, progress, adminId, facultyId
  </sql>
  
  <!-- Select room booking list for specific room. -->
  <select id="selectRoomBookingListForRoom" resultMap="BaseResultMap">
  	select groupId, roomBuilding, roomNumber, 
			applicantType, applicantId, fromTime, toTime,
        	bookReason, `status`, adminId, facultyId
		from RoomBooking
   		where roomBuilding = #{roomBuilding,jdbcType=VARCHAR}
			and roomNumber = #{roomNumber,jdbcType=VARCHAR}
			and `status` = 'admin_approved'
			and expired != 1;
  </select>
  
  <!-- Select room booking list for specific applicant. -->
  <select id="selectRoomBookingListForApplicant" resultMap="BaseResultMap">
  	select groupId, roomBuilding, roomNumber, 
			applicantType, applicantId, fromTime, toTime,
        	bookReason, `status`, adminId, facultyId
		from RoomBooking
   		where applicantType = #{applicantType,jdbcType=VARCHAR}
			and applicantId = #{applicantId,jdbcType=VARCHAR};
  </select>
  
  <!-- Insert book room. -->
  <insert id="insertBookRoom">
  	insert into RoomBooking (groupId, roomBuilding, roomNumber, 
			applicantType, applicantId, fromTime, toTime,
			bookReason, `status`, adminId, facultyId)
		values (#{groupId,jdbcType=VARCHAR}, #{roomBuilding,jdbcType=VARCHAR}, #{roomNumber,jdbcType=VARCHAR},
			#{applicantType,jdbcType=VARCHAR}, #{applicantId,jdbcType=VARCHAR}, #{fromTime,jdbcType=TIMESTAMP}, #{toTime,jdbcType=TIMESTAMP},
			#{bookReason,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, (select id from Admin limit 0,1), #{facultyId,jdbcType=VARCHAR});
  </insert>
  
  <!-- Cancel booking room. -->
  <update id="updateToCancelBooking">
  	update RoomBooking
  		set `status` = 'canceled'
  		where groupId = #{groupId,jdbcType=VARCHAR};
  </update>
  
</mapper>